---
- name: Directories
  hosts: all
  tasks:
    - action: file
      name: Create
      args:
        path: "{{item}}"
        state: directory
      with_items:
        - ~/bin
        - ~/.config
    - action: file
      name: Delete
      args:
        path: "{{item}}"
        state: absent
      with_items:
        - ~/Music
        - ~/Public
        - ~/Templates
        - ~/Videos
        - ~/examples.desktop
    - action: git
      name: Clone bin repo
      args:
        repo: git@github.com:tjarvstrand/bin.git
        dest: "~/bin"
      ignore_errors: yes
- name: Install packages
  hosts: all
  become: yes
  tasks:
    - action: apt
      name: Install lsb-core
      args:
        name: lsb-core
    - shell: lsb_release -a | grep Codename | cut -f 2
      register: ubuntu_codename
    - action: apt_key
      name: Add apt keys
      args:
        keyserver: hkp://keyserver.ubuntu.com:80
        id: 94558F59
    - name: Add ubuntu partner
      action: apt_repository
      args:
        repo: "deb http://archive.canonical.com/ubuntu {{ubuntu_codename.stdout}} partner"
    # - name: Add ubuntu universe
    #   action: apt_repository
    #   args:
    #     repo: "deb http://archive.ubuntu.com/ubuntu {{ubuntu_codename.stdout}} main universe restricted multiverse"
    - action: apt
      args:
        update_cache: yes
    - action: apt
      name: Install packages
      args:
        name: "{{item}}"
      with_items:

        - alsa-utils
        - aptitude
        - autoconf
        - build-essential
        - cups
        - cups-bsd
        - cups-pdf
        - curl
        - emacs
        - emacs25-el
        - emacs-goodies-el
#        - foomatic-db # OpenPrinting printer support
#        - foomatic-db-compressed-ppds
        - git
        - gnupg
        - gnupg-agent
        - gzip
#        - hplip #  HP Linux Printing and Imaging System
        - markdown
        - mono-complete
        - nautilus-dropbox
        - nodejs
        - network-manager
        - network-manager-openvpn
        - net-tools
 #       - printer-driver-all
        - python-dev
        - python-software-properties # apt-add-repostory
        - read-edid
        - rng-tools
        - software-properties-common
        - ruby
        - ruby-dev
        - tar
        - tree
        - unrar
        - usbmount # Automount usb
        - xcompmgr
        - x11-xkb-utils
        - xbacklight
        - xinput
        - wmname

        # erlang/otp
        - libncurses5-dev
        - libssl-dev
        # erlang wx support
 #       - libwxgtk2.8-dev
 #       - freeglut3-dev

    - shell: git config --global user.email "tjarvstrand@gmail.com"
      become: no
    - shell: git config --global user.name "Thomas JÃ¤rvstrand"
      become: no
    - name: Set console font size
      action: replace
      args:
        dest: /etc/default/console-setup
        regexp: "FONTSIZE=.*"
        replace: "FONTSIZE=10x20"
    - shell: localectl set-keymap dvorak
    - action: lineinfile
      args:
        regexp: "[# ]*keycode 58 ="
        line: "keycode 58 = Control"
        dest: /etc/console-setup/remap.inc
    - shell: dpkg-reconfigure -f noninteractive keyboard-configuration
- name: Networking
  hosts: all
  become: yes
  tasks:
    - name: Disable auto up of ethernet interfaces
      action: replace
      args:
        dest: /etc/network/interfaces
        backup: yes
        regexp: "(#*)?(.*?(eth[0-9]|en.[0-9]).*?\n)"
        replace: '#\2'
    - name: Disable auto up of ethernet interfaces
      action: replace
      args:
        dest: /etc/NetworkManager/NetworkManager.conf
        backup: yes
        regexp: managed=false
        replace: managed=true
    - name: Override NetworkManager only managing wifi
      action: copy
      args:
        dest: /etc/NetworkManager/conf.d/10-globally-managed-devices.conf
        content: ""
    - name: Create script to auto enable/disable wifi
      action: copy
      args:
        dest: /etc/NetworkManager/dispatcher.d/99-wifi-disable-on-ethernet
        mode: u=rwx,g=r,o=r
        content: |
          #!/bin/sh
          myname=${0##*/}
          log() { logger -p user.info -t "${myname}[$$]" "$*"; }
          IFACE=$1
          ACTION=$2

          case ${IFACE} in
              eth*|eno*|usb*)
                  case ${ACTION} in
                      up)
                          log "disabling wifi radio"
                          nmcli radio wifi off
                      ;;
                      down)
                          log "enabling wifi radio"
                          nmcli radio wifi on
                      ;;
                  esac
              ;;
          esac



# Local Variables:
# mode: yaml
# End:
